                                   = intro =

The point of this markup format is that indentation whitespace doesn't matter

And to be a combination of various markup things that i like from various
markup languages

This text is only structured so that a treesitter parser can parse it
It is not meant to be converted to html or something viewed
It is a markup format *made* to be displayed inside neovim

===============================================================================


                                   = Syntax =

Whitespace at the start of a line is ignored
This way the user to format the text however they see fit

        == Esc ==

Any special character can be escaped with `\`

        == Bold ==

`*text*`


        == Italic ==

`/text/`


        == Underline ==

`_text_`

        == Strikethrough ==

`~text~` or `-text-`

        == Links ==

`[shown text]|the link|`

`the link` can be an |Anchor|, name of a |Header|, `https?://` or a path to a file
`[shown text]` is optional


       == Highlight/mark ==

`+this is a highlight+`

>html
<mark>this an equivelent highlight in html</mark>
<


       == Header ==

H1: = text =
H2: == text ==
H3: === text ===
.
.
H6: ====== text ======

The ending `=` are optional


       == Dividers ==

`---`
`___`
`+++`
`===`
`:::`

A divider is only given syntatic meaning in order to encourage the use of them

It really makes a document look nicer

       == Unordered bullets ==

`- top level`
    `- next level (interally this is still top level
      because whitespace is ignored)`


      == Ordered bullets ==

`1. top level`
    `a. next level`
        `i. next level`

*NOTE*: The user is expected to number themselves


      == Tables ==

>markdown
Column 1 | Column 2
---------|---------
Data 1   | Data 2
<

Yeah uh, there is no table, it's too much effort,
if you want a table, use a markdown block,
or dont since it really doesn't matter that much



      == Anchor ==

An anchor can be any header OR, marked with `#anchor#`


      == Footnotes ==

You can link to a footnote with `^[text]` where `text` may be any text
To create the actual footnote text, use
>
^[1]:
    The footnote goes here
[/1]
<

To link to a footnote do `^[1]`



       == Code snippet ==
`markup in here is ignored`


       == Code block ==
>Language
markup in here is also ignored
<

eg:
>python
print("Hello")
<

This can also be used to make a plain quote:

>
quote
<

putting `word:` before the opening `>` will cause `word:` to be highlighted
